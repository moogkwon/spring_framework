<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven /> <!-- 이게 잇어야 annotation 쓸수 있음 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" /> <!-- 소스파일에 대한 경로 설정 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.spring" /><!-- .controller, .service, .dao 가 뒤에 붙음 -->
	
	
	<!-- 인터셉터 등록하기 -->
	<interceptors>
		<interceptor>
			<mapping path="/demo/*"/>
			<mapping path="/board/*"/>
			<exclude-mapping path="/member/*"/>
			<beans:bean id="loggerInterceptor" class="com.kh.spring.common.interceptor.LoggerInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 파일이 넘어오면 파일을 처리하는 resolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean>
	
	
	<!-- jsonView 등록하기 -->
	<beans:bean id="viewResolver" 
	class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"/>
	</beans:bean>
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView">
	</beans:bean>
	
	
	<!-- DataBind -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
	<!-- 웹소켓 설정  -->
	<beans:bean id="chatting" class="com.kh.spring.chatting.ViewChatting"/>
	<websocket:handlers>
		<websocket:mapping handler="chatting" path="/viewChatting"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>		
		</websocket:handshake-interceptors>
	</websocket:handlers>
	<beans:bean class="org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean">
		<beans:property name="maxBinaryMessageBufferSize" value="1020400"/>
	</beans:bean>
	
	
	
</beans:beans>
